extends layout

block link
  -var selected="Projects"

block content
  .row-fluid.section2
    .span10.offset1.copy.drop-shadow.raised
      .centered
        h3
          a.cross-link(href='http://air-car-and-car.tk')
            | Air car and car
          |  - 2014
      .row-fluid
        .span10.offset1.copy
          a.cross-link(href='https://air-car-and-car.herokuapp.com')
            img.img-polaroid(width='100%', src='img/air-car-and-car.png')
      br
      .row-fluid
        .copy.span10.offset1
          :markdown
            This is an AirBnB clone, where users can rent their cars to other users.

            Following the current industry best practices,
            the web application is mostly client side, communicate with
            the server through a RESTful JSON API,
            and is built upon a MEAN stack.

              The features so far include:

            *   Authentication
              *   Sign up
              *   Login with Facebook/Google
            *   Create car with availabilities, location and price (only if logged in)
            *   Search for cars (location and dates)

            Feel free to [try it live](http://air-car-and-car.tk "air-car-and-car"),
            or alternativly browse the sources on [github](https://github.com/jackokaiser/air-car-and-car "air-car-and-car").





  .row-fluid.section1
    .span10.offset1.copy.drop-shadow.raised
      .centered
        h3
          a.cross-link(href='/raymarcher')
            | Raymarcher
          |  - 2013
      .row-fluid
        .span12
          iframe(frameborder='0', height='500px', width='100%', allowfullscreen='allowFullScreen', webkitallowfullscreen='true', mozallowfullscreen='true', src="/raymarcherEmbed")
      .row-fluid
        .copy.span12
        :markdown
          There, I coded a small raymarcher that emulates lava lamp behaviour.
          The point was to highlight the differences between
          a *Raytracer* and a *Raymarcher*.
          When the first solves equations in order to find an intersection
          with the surface,
          the second evaluates potential of objects in space
          and determines whether it has crossed the surface or not.

          Note that we can achieve smoother results with the marching technique.
        .centered
           a.btn.btn-inverse.btn-large(href="/raymarcher")
              | go fullscreen

  .row-fluid.section1
    .span10.offset1.copy.drop-shadow.raised
      .centered
        h3
          a.cross-link(href='/raytracer')
            | Raytracer
          |  - 2013
      .row-fluid
        .span12
          iframe(frameborder='0', height='500px', width='100%', allowfullscreen='allowFullScreen', webkitallowfullscreen='true', mozallowfullscreen='true', src="/raytracerEmbed")
      .row-fluid
        .copy.span12
        :markdown
           Here is the small raytracer.
           It is a standalone that I coded from scratch,
           I haven't put quite as much work as I did for the one I've
           coded for [Skimlab](http://skimlab.com "Skimlab"), but still.

           This one involves shadows, one level reflection,
           and perlin noise to compute spheres' color.
           It is running in real-time on my laptop, though the long shaders
           can take few seconds to compile.
        .centered
           a.btn.btn-inverse.btn-large(href="/raytracer")
              | go fullscreen
